{
  "name": "cubing",
  "version": "0.28.0",
  "description": "A collection of JavaScript cubing libraries.",
  "author": "The js.cubing.net team",
  "type": "module",
  "license": "GPL-3.0-or-later",
  "repository": "github:cubing/cubing.js",
  "exports": {
    "./alg": {
      "import": "./dist/esm/alg/index.js",
      "types": "./dist/types/alg/index.d.ts"
    },
    "./bluetooth": {
      "import": "./dist/esm/bluetooth/index.js",
      "types": "./dist/types/bluetooth/index.d.ts"
    },
    "./kpuzzle": {
      "import": "./dist/esm/kpuzzle/index.js",
      "types": "./dist/types/kpuzzle/index.d.ts"
    },
    "./notation": {
      "import": "./dist/esm/notation/index.js",
      "types": "./dist/types/notation/index.d.ts"
    },
    "./protocol": {
      "import": "./dist/esm/protocol/index.js",
      "types": "./dist/types/protocol/index.d.ts"
    },
    "./puzzle-geometry": {
      "import": "./dist/esm/puzzle-geometry/index.js",
      "types": "./dist/esm/types/puzzle-geometry/index.d.ts"
    },
    "./puzzles": {
      "import": "./dist/esm/puzzles/index.js",
      "types": "./dist/esm/types-geometry/index.d.ts"
    },
    "./scramble": {
      "import": "./dist/esm/scramble/index.js",
      "types": "./dist/types/scramble/index.d.ts"
    },
    "./search": {
      "import": "./dist/esm/search/index.js",
      "types": "./dist/types/search/index.d.ts"
    },
    "./stream": {
      "import": "./dist/esm/stream/index.js",
      "types": "./dist/types/stream/index.d.ts"
    },
    "./twisty": {
      "import": "./dist/esm/twisty/index.js",
      "types": "./dist/types/twisty/index.d.ts"
    }
  },
  "dependencies": {
    "@types/three": "^0.141.0",
    "@types/web-bluetooth": "^0.0.14",
    "comlink": "^4.3.1",
    "jest-environment-jsdom": "^28.1.3",
    "three": "^0.142.0"
  },
  "devDependencies": {
    "@babel/eslint-parser": "^7.18.9",
    "@babel/preset-env": "^7.18.9",
    "@babel/preset-typescript": "^7.18.6",
    "@types/dom-speech-recognition": "^0.0.1",
    "@types/jest": "^28.1.6",
    "@types/node": "^18.0.6",
    "@typescript-eslint/eslint-plugin": "^5.30.7",
    "@typescript-eslint/parser": "^5.30.7",
    "babel-jest": "^28.1.3",
    "barely-a-dev-server": "^0.2.6",
    "esbuild": "^0.14.49",
    "eslint": "^8.20.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-html": "^7.0.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^28.1.3",
    "jszip": "^3.10.0",
    "peggy": "^2.0.1",
    "prettier": "^2.7.1",
    "puppeteer": "^15.4.0",
    "tsup": "^6.1.3",
    "typedoc": "^0.23.8",
    "typescript": "^4.7.4",
    "yargs": "^17.5.1"
  },
  "minimalDevDependencies": [
    "barely-a-dev-server",
    "esbuild",
    "jszip"
  ],
  "engines": {
    "node": "^14.18 || ^16.13 || >=18"
  },
  "files": [
    "/LICENSE.md",
    "/README.md",
    "/package.json",
    "/package-lock.json",
    "/dist/esm/**/*",
    "/dist/types/**/*",
    "/*/package.json",
    "/*/index.d.ts"
  ],
  "scripts": {
    "build": "npm run clean && node ./script/build/main.js all",
    "build-esm": "node ./script/build/main.js esm",
    "build-bundle-global": "node ./script/build/main.js bundle-global",
    "build-types": "node ./script/build/main.js types",
    "build-bin": "node ./script/build/main.js bin",
    "build-sites": "npm run build-site-twizzle && npm run build-site-experiments",
    "build-site-twizzle": "node ./script/build/main.js twizzle",
    "build-site-experiments": "node ./script/build/main.js experiments",
    "build-site-typedoc": "npx typedoc src/cubing/*/index.ts",
    "build-search-worker": "node ./script/build/main.js search-worker",
    "generate-js": "npm run generate-js-parsers && npm run generate-js-svg",
    "generate-js-parsers": "npx peggy --format es src/cubing/kpuzzle/parser/parser-peggy.peggy",
    "generate-js-svg": "echo \"TODO: Generating JS for SVGs is not implemented yet.\"",
    "dev": "npm run initial-setup && node ./script/build/main.js sites dev",
    "link": "npm run build && npm link",
    "clean": "rm -rf dist .temp coverage src/cubing/search/search-worker-inside-generated* ./alg ./bluetooth ./kpuzzle ./notation ./protocol ./puzzle-geometry ./puzzles ./scramble ./search ./stream ./twisty",
    "test": "npm run test-jest && npm run lint && npm run test-import-restrictions && npm run test-tsc # keep test.yml in sync with this",
    "test-dist-esm-node-import": "node script/test/dist/esm/node-import/main.mjs",
    "test-dist-esm-parcel": "node ./script/test/dist/esm/parcel/main.js",
    "test-dist-esm-perf": "node script/test/dist/esm/perf/*.mjs",
    "test-dist-experiments": "node ./script/test/dist/experiments/main.js",
    "test-dist-not-imported-from-src": "node ./script/test/dist/not-imported-from-src/main.js",
    "test-import-restrictions": "node ./script/test/import-restrictions/main.js",
    "test-jest": "npx jest --collectCoverage",
    "test-tsc": "npm run build-types && npx tsc --project ./tsconfig.json",
    "format": "npx eslint --fix --ext=js,ts src script; npx prettier --write src script",
    "setup": "npm install",
    "initial-setup": "node ./script/initial-setup/main.js",
    "lint": "npx eslint --ext=js,ts src script",
    "prepack": "npm run clean && npm run build && npm run test-dist-esm-node-import",
    "postpublish": "echo -e '\n\nConsider updating `cdn.cubing.net` if you have access:\nhttps://github.com/cubing/cdn.cubing.net/blob/main/docs/maintenance.md#updating-cdncubingnet-to-a-new-cubing-version\n'"
  },
  "keywords": [
    "cubing",
    "speedcubing",
    "puzzle",
    "visualization",
    "kpuzzle",
    "cuble",
    "bluetooth",
    "rubik",
    "rubik's"
  ],
  "prettier": {
    "semi": true,
    "trailingComma": "all",
    "tabWidth": 2,
    "quoteProps": "consistent"
  },
  "eslintConfig": {
    "parser": "@babel/eslint-parser",
    "parserOptions": {
      "project": "./tsconfig.json"
    },
    "overrides": [
      {
        "files": "**/*.js",
        "parser": "@babel/eslint-parser",
        "extends": [
          "eslint:recommended"
        ],
        "rules": {
          "no-unused-vars": [
            "error",
            {
              "argsIgnorePattern": "^_"
            }
          ]
        }
      },
      {
        "files": "**/*.ts",
        "parser": "@typescript-eslint/parser",
        "plugins": [
          "@typescript-eslint"
        ],
        "extends": [
          "eslint:recommended",
          "plugin:@typescript-eslint/recommended",
          "plugin:@typescript-eslint/recommended-requiring-type-checking"
        ],
        "rules": {
          "curly": "error",
          "no-throw-literal": "error",
          "@typescript-eslint/no-inferrable-types": "off",
          "@typescript-eslint/no-floating-promises": "off",
          "@typescript-eslint/no-unsafe-assignment": "off",
          "@typescript-eslint/no-unsafe-member-access": "off",
          "@typescript-eslint/no-explicit-any": "off",
          "@typescript-eslint/no-misused-promises": "off",
          "@typescript-eslint/require-await": "off",
          "@typescript-eslint/no-unused-vars": [
            "error",
            {
              "argsIgnorePattern": "^_"
            }
          ],
          "@typescript-eslint/no-unsafe-argument": "off",
          "@typescript-eslint/no-non-null-assertion": "off",
          "@typescript-eslint/no-unsafe-call": "off",
          "@typescript-eslint/no-empty-function": "off",
          "@typescript-eslint/restrict-plus-operands": "off",
          "@typescript-eslint/restrict-template-expressions": "off"
        }
      }
    ],
    "ignorePatterns": [
      "/src/static",
      "/src/cubing/search/search-worker-inside-generated*",
      "parser-peggy.js"
    ],
    "globals": {
      "globalThis": false,
      "Promise": false,
      "Symbol": false
    },
    "env": {
      "commonjs": true,
      "browser": true,
      "node": true
    }
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "current"
          }
        }
      ],
      "@babel/preset-typescript"
    ]
  },
  "jest": {
    "roots": [
      "<rootDir>/src",
      "<rootDir>/script"
    ],
    "coverageDirectory": "<rootDir>/.temp/coverage"
  }
}
